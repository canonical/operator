name: Observability Charm Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_call:
  workflow_dispatch:

permissions: {}

jobs:
  o11y-charm-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - charm-repo: canonical/alertmanager-k8s-operator
            commit: 535172141c55236ca82ce6e2e13e8bd1c5460f81  # 2025-09-19T12:47:33Z
          - charm-repo: canonical/prometheus-k8s-operator
            commit: 424fa3299eb11e91c3a9bdda9822e21de70e0edf  # rev264 2025-09-24T12:54:57Z
          - charm-repo: canonical/grafana-k8s-operator
            commit: 319a3e697d31cbf1d901d485ed674babbc9b778e  # 2025-09-19T18:43:22Z
    steps:
      - name: Checkout the ${{ matrix.charm-repo }} repository
        uses: actions/checkout@v5
        with:
          repository: ${{ matrix.charm-repo }}
          persist-credentials: false
          ref: ${{ matrix.commit }}

      - name: Install dependencies
        run: pip install tox~=4.2 uv~=0.6

      - name: Update 'ops' and 'ops-scenario' dependencies in test charm to latest
        if: ${{ !(matrix.disabled) }}
        run: |
          if [ -e "uv.lock" ]; then
            uv remove ops --optional dev --frozen || echo "maybe ops[testing] is not a dev dependency"
            uv remove ops-scenario --optional dev --frozen || echo "maybe ops-scenario is not a dev dependency"
            uv remove ops --frozen
            sed -i 's/requires-python = "~=3.8"/requires-python = "~=3.10"/g' pyproject.toml
            uv add git+$GITHUB_SERVER_URL/$GITHUB_REPOSITORY@$GITHUB_SHA#subdirectory=testing --optional dev --raw-sources --prerelease=if-necessary-or-explicit
            uv add git+$GITHUB_SERVER_URL/$GITHUB_REPOSITORY@$GITHUB_SHA --raw-sources --prerelease=if-necessary-or-explicit
          else
            echo "Error: no uv.lock file found"
            exit 1
          fi

      - name: Run the charm's unit tests
        if: ${{ !(matrix.disabled) }}
        run: tox -vve unit

      - name: Check if 'scenario' tox environment exists
        id: check-tox-env-scenario
        run: |
          if tox --listenvs | grep -q "^scenario$"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      # alertmanager-k8s has old Scenario tests, so we can't do this until those
      # are updated.
#      - name: Run the charm's scenario unit tests
#        if: ${{ steps.check-tox-env-scenario.outputs.exists == 'true' && !(matrix.disabled) }}
#        run: tox -vve scenario

      - name: Check if 'static' tox environment exists
        id: check-tox-env-static
        run: |
          if tox --listenvs | grep -q "^static$"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Run the charm's static analysis checks
        if: ${{ steps.check-tox-env-static.outputs.exists == 'true' && !(matrix.disabled)
          }}
        run: tox -vve static

      - name: Check if 'static-charm' tox environment exists
        id: check-tox-env-static-charm
        run: |
          if tox --listenvs | grep -q "^static-charm$"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Run the charm's static (charm) analysis checks
        if: ${{ steps.check-tox-env-static-charm.outputs.exists == 'true' && !(matrix.disabled)
          }}
        run: tox -vve static-charm
